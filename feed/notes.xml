<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://gavey.ca/feed/notes.xml" rel="self" type="application/atom+xml" /><link href="https://gavey.ca/" rel="alternate" type="text/html" /><updated>2025-01-01T17:08:55+00:00</updated><id>https://gavey.ca/feed/notes.xml</id><title type="html">Syntax and Subplots | Notes</title><entry><title type="html">Youtube IMG_XXXX Hack</title><link href="https://gavey.ca/notes/2024/youtube-hack/" rel="alternate" type="text/html" title="Youtube IMG_XXXX Hack" /><published>2024-11-11T19:00:00+00:00</published><updated>2024-11-11T19:00:00+00:00</updated><id>https://gavey.ca/notes/2024/youtube-hack</id><content type="html" xml:base="https://gavey.ca/notes/2024/youtube-hack/"><![CDATA[<p>I read this <a href="https://ben-mini.github.io/2024/img-0416">Hacker News article</a> today</p>

<p>Interesting “hack” that allows you to see a bunch of accidentally uploaded public videos from peoples phones about 12 years ago.</p>

<p>You just enter into youtube search IMG_XXXX where XXXX is a number from 0000 to 9999 and it will show you videos that were uploaded to Youtube from an early iOS device.</p>

<p>Here is an <a href="https://www.youtube.com/results?search_query=IMG_0722">example search</a></p>]]></content><author><name>Derek Gavey</name></author><category term="til" /><summary type="html"><![CDATA[I read this Hacker News article today]]></summary></entry><entry><title type="html">Recording a radio livestream</title><link href="https://gavey.ca/notes/2024/ckxu-recording/" rel="alternate" type="text/html" title="Recording a radio livestream" /><published>2024-11-11T18:00:00+00:00</published><updated>2024-11-11T18:00:00+00:00</updated><id>https://gavey.ca/notes/2024/ckxu-recording</id><content type="html" xml:base="https://gavey.ca/notes/2024/ckxu-recording/"><![CDATA[<p>I needed to record a livestream of the college radio station where my son now has a program.</p>

<p>I used FFMPEG and the script below in order to do this.  I added a cron job for the time of his program.  I should get them all recorded now when I can’t listen live.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#!/bin/bash

# Set the input stream URL
STREAM_URL="https://stream.statsradio.com/8156/stream"

# Get the current date in the format "YYYY-MM-DD"
RECORDING_DATE=$(date +"%Y-%m-%d")

# Set the output file name
OUTPUT_FILE="/Users/derek/ckxu/ckxu_recording_$RECORDING_DATE.mp3"

# Record the stream using ffmpeg for 1 hour and 10 minutes
/opt/homebrew/bin/ffmpeg -i "$STREAM_URL" -t 4200 -c copy "$OUTPUT_FILE"
</code></pre></div></div>]]></content><author><name>Derek Gavey</name></author><category term="til" /><summary type="html"><![CDATA[I needed to record a livestream of the college radio station where my son now has a program.]]></summary></entry><entry><title type="html">Tauri V2 - Electron Alternative</title><link href="https://gavey.ca/notes/2024/tauri/" rel="alternate" type="text/html" title="Tauri V2 - Electron Alternative" /><published>2024-11-07T19:00:00+00:00</published><updated>2024-11-07T19:00:00+00:00</updated><id>https://gavey.ca/notes/2024/tauri</id><content type="html" xml:base="https://gavey.ca/notes/2024/tauri/"><![CDATA[<p>Apparently there is some electron app building alternatives.</p>

<p>Someone alerted me to this new project called <a href="https://v2.tauri.app/">Tauri</a>.</p>

<p>Looks like an interesting project if you want to build desktop apps with JS/HTML. Looks like the foot print of the app would be smaller with this.</p>

<p>Seems to be a Rust based project too.</p>]]></content><author><name>Derek Gavey</name></author><category term="til" /><summary type="html"><![CDATA[Apparently there is some electron app building alternatives.]]></summary></entry></feed>